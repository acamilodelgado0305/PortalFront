name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # Job to build the Docker image
  build_prod_docker_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.2
        options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.TOKEN_DEPLOY }}" | docker login -u "${{ secrets.USER_NAME }}" --password-stdin ghcr.io/portal/frontend:production

      - name: Pull production image (if it exists)
        run: docker pull ghcr.io/portal/frontend:production || true

      - name: Build Docker image
        run: docker build --build-arg env_name=production --build-arg env_port=3001 -t ghcr.io/portal/frontend:production .

      - name: Push Docker image to the registry
        run: docker push ghcr.io/portal/frontend:production

  # Job to deploy the application
  deploy_production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build_prod_docker_image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install SSH and SSHPass
        run: sudo apt-get update && sudo apt-get install -y openssh-client sshpass

      - name: Set up deployment directory
        run: |
          mkdir enjoyplatforms
          chmod +x enjoyplatforms
          mv docker-compose-production.yml enjoyplatforms/docker-compose.yml

      - name: Decode SSH Key and set permissions
        run: echo "${{ secrets.SERVER_SSH_KEY }}" | base64 -d > my_ssh && chmod 400 my_ssh

      - name: Copy files to server
        run: |
          sshpass scp -i my_ssh -o StrictHostKeyChecking=no -r enjoyplatforms ubuntu@${{ secrets.SERVER_IP }}:/home/ubuntu/

      - name: SSH and deploy
        run: |
          sshpass ssh -i my_ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SERVER_IP }} \
          "cd /home/ubuntu/enjoyplatforms; \
           sudo docker login -u "${{ secrets.USER_NAME }}" -p ${{ secrets.DOCKER_PASSWORD }} ghcr.io/portal/frontend:production; \
           sudo docker compose down; \
           sudo docker image rm ghcr.io/portal/frontend:production; \
           sudo docker compose up -d;"